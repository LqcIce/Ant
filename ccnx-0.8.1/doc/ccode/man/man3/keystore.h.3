.TH "include/ccn/keystore.h" 3 "9 Oct 2013" "Version 0.8.1" "Content-Centric Networking in C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/ccn/keystore.h \- 
.PP
KEYSTORE interface.  

.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBkeystore_header_st\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBCCN_SECRET_KEY_LENGTH\fP   256"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBkeystore_header_st\fP \fBkeystore_header\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "struct ccn_keystore * \fBccn_keystore_create\fP (void)"
.br
.ti -1c
.RI "void \fBccn_keystore_destroy\fP (struct ccn_keystore **p)"
.br
.ti -1c
.RI "int \fBccn_keystore_init\fP (struct ccn_keystore *p, char *name, char *password)"
.br
.ti -1c
.RI "struct ccn_pkey * \fBccn_keystore_key\fP (struct ccn_keystore *p)"
.br
.ti -1c
.RI "struct ccn_pkey * \fBccn_keystore_public_key\fP (struct ccn_keystore *p)"
.br
.ti -1c
.RI "const char * \fBccn_keystore_digest_algorithm\fP (struct ccn_keystore *p)"
.br
.ti -1c
.RI "ssize_t \fBccn_keystore_key_digest_length\fP (struct ccn_keystore *p)"
.br
.ti -1c
.RI "const unsigned char * \fBccn_keystore_key_digest\fP (struct ccn_keystore *p)"
.br
.ti -1c
.RI "struct ccn_certificate * \fBccn_keystore_certificate\fP (struct ccn_keystore *p)"
.br
.ti -1c
.RI "int \fBccn_keystore_file_init\fP (char *filename, char *password, char *subject, int keylength, int validity_days)"
.br
.RI "\fICreate a PKCS12 keystore file. \fP"
.ti -1c
.RI "struct ccn_keystore * \fBccn_aes_keystore_create\fP (void)"
.br
.ti -1c
.RI "int \fBccn_aes_keystore_init\fP (struct ccn_keystore *p, char *filename, const char *password)"
.br
.ti -1c
.RI "int \fBccn_aes_keystore_file_init\fP (char *filename, const char *password, unsigned char *key, int keylength)"
.br
.RI "\fICreate an AES keystore file. \fP"
.ti -1c
.RI "void \fBccn_create_filename_with_digest_suffix\fP (struct \fBccn_charbuf\fP *filename, const unsigned char *key, int keylength)"
.br
.ti -1c
.RI "void \fBccn_create_aes_filename_from_digest\fP (struct \fBccn_charbuf\fP *filename, const unsigned char *digest, int digest_len)"
.br
.ti -1c
.RI "int \fBccn_create_aes_filename_from_key\fP (struct \fBccn_charbuf\fP *filename, unsigned char *key, int keylength)"
.br
.ti -1c
.RI "void \fBccn_generate_symmetric_key\fP (unsigned char *keybuf, int keylength)"
.br
.ti -1c
.RI "struct \fBccn_charbuf\fP * \fBccn_get_aes_keystore_path\fP (struct ccn *h, char *suffix)"
.br
.ti -1c
.RI "struct ccn_pkey * \fBccn_keystore_private_key\fP (struct ccn_keystore *p) DEPRECATED"
.br
.RI "\fIDeprecated in favor of ccn_keystore_key. \fP"
.ti -1c
.RI "ssize_t \fBccn_keystore_public_key_digest_length\fP (struct ccn_keystore *p) DEPRECATED"
.br
.RI "\fIDeprecated in favor of ccn_keystore_digest_length. \fP"
.ti -1c
.RI "const unsigned char * \fBccn_keystore_public_key_digest\fP (struct ccn_keystore *p) DEPRECATED"
.br
.RI "\fIDeprecated in favor of ccn_keystore_key_digest. \fP"
.in -1c
.SH "Detailed Description"
.PP 
KEYSTORE interface. 

This is a veneer so that the ccn code can avoid exposure to the underlying keystore implementation types.
.PP
Part of the CCNx C Library.
.PP
Copyright (C) 2009,2013 Palo Alto Research Center, Inc.
.PP
This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License version 2.1 as published by the Free Software Foundation. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. 
.PP
Definition in file \fBkeystore.h\fP.
.SH "Define Documentation"
.PP 
.SS "#define CCN_SECRET_KEY_LENGTH   256"
.PP
Definition at line 32 of file keystore.h.
.PP
Referenced by main().
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBkeystore_header_st\fP  \fBkeystore_header\fP"
.SH "Function Documentation"
.PP 
.SS "struct ccn_keystore* ccn_aes_keystore_create (void)\fC [read]\fP"
.PP
Definition at line 90 of file ccn_aes_keystore.c.
.PP
Referenced by ccn_load_signing_key(), ccn_locate_key(), and main().
.SS "int ccn_aes_keystore_file_init (char * filename, const char * password, unsigned char * key, int keylength)"
.PP
Create an AES keystore file. \fBParameters:\fP
.RS 4
\fIfilename\fP the name of the keystore file to be created. 
.br
\fIpassword\fP the import/export password for the keystore. 
.br
\fIkey\fP the key to encrypt in the keystore 
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success, -1 on failure 
.RE
.PP

.PP
Definition at line 203 of file ccn_aes_keystore.c.
.PP
Referenced by main().
.SS "int ccn_aes_keystore_init (struct ccn_keystore * p, char * filename, const char * password)"
.PP
Definition at line 117 of file ccn_aes_keystore.c.
.PP
Referenced by ccn_load_signing_key(), ccn_locate_key(), and main().
.SS "void ccn_create_aes_filename_from_digest (struct \fBccn_charbuf\fP * filename, const unsigned char * digest, int digest_len)"
.SS "int ccn_create_aes_filename_from_key (struct \fBccn_charbuf\fP * filename, unsigned char * key, int keylength)"
.PP
Definition at line 293 of file ccn_aes_keystore.c.
.PP
Referenced by main().
.SS "void ccn_create_filename_with_digest_suffix (struct \fBccn_charbuf\fP * filename, const unsigned char * key, int keylength)"
.PP
Definition at line 306 of file ccn_aes_keystore.c.
.PP
Referenced by ccn_create_aes_filename_from_key(), and ccn_locate_key().
.SS "void ccn_generate_symmetric_key (unsigned char * keybuf, int keylength)"
.PP
Definition at line 283 of file ccn_aes_keystore.c.
.PP
Referenced by main().
.SS "struct \fBccn_charbuf\fP* ccn_get_aes_keystore_path (struct ccn * h, char * suffix)\fC [read]\fP"
.SS "struct ccn_certificate* ccn_keystore_certificate (struct ccn_keystore * p)\fC [read]\fP"
.PP
Definition at line 202 of file ccn_keystore.c.
.SS "struct ccn_keystore* ccn_keystore_create (void)\fC [read]\fP"
.PP
Definition at line 88 of file ccn_keystore.c.
.PP
Referenced by ccn_load_signing_key(), and main().
.SS "void ccn_keystore_destroy (struct ccn_keystore ** p)"
.PP
Definition at line 100 of file ccn_keystore.c.
.PP
Referenced by ccn_load_signing_key(), ccn_locate_key(), and finalize_keystore().
.SS "const char* ccn_keystore_digest_algorithm (struct ccn_keystore * p)"
.PP
Definition at line 180 of file ccn_keystore.c.
.PP
Referenced by ccn_sign_content(), and main().
.SS "int ccn_keystore_file_init (char * filename, char * password, char * subject, int keylength, int validity_days)"
.PP
Create a PKCS12 keystore file. \fBParameters:\fP
.RS 4
\fIfilename\fP the name of the keystore file to be created. 
.br
\fIpassword\fP the import/export password for the keystore. 
.br
\fIsubject\fP the subject (and issuer) name in the certificate. 
.br
\fIkeylength\fP the number of bits in the RSA key to be generated. A value <= 0 will result in the default (1024) being used. 
.br
\fIvalidity_days\fP the number of days the certificate in the keystore will be valid. A value <= 0 will result in the default (30) being used. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success, -1 on failure 
.RE
.PP

.PP
Definition at line 249 of file ccn_keystore.c.
.PP
Referenced by ccn_load_or_create_key(), ccnd_init_internal_keystore(), ccnr_init_repo_keystore(), and main().
.SS "int ccn_keystore_init (struct ccn_keystore * p, char * name, char * password)"
.PP
Definition at line 108 of file ccn_keystore.c.
.PP
Referenced by ccn_load_signing_key(), and main().
.SS "struct ccn_pkey* ccn_keystore_key (struct ccn_keystore * p)\fC [read]\fP"
.PP
Definition at line 162 of file ccn_keystore.c.
.PP
Referenced by ccn_keystore_private_key(), ccn_locate_key(), ccn_sign_content(), and main().
.SS "const unsigned char* ccn_keystore_key_digest (struct ccn_keystore * p)"
.PP
Definition at line 194 of file ccn_keystore.c.
.PP
Referenced by ccn_get_public_key(), ccn_keystore_public_key_digest(), ccn_load_signing_key(), ccn_sign_content(), and main().
.SS "ssize_t ccn_keystore_key_digest_length (struct ccn_keystore * p)"
.PP
Definition at line 188 of file ccn_keystore.c.
.PP
Referenced by ccn_get_public_key(), ccn_keystore_public_key_digest_length(), ccn_load_signing_key(), ccn_sign_content(), and main().
.SS "struct ccn_pkey* ccn_keystore_private_key (struct ccn_keystore * p)\fC [read]\fP"
.PP
Deprecated in favor of ccn_keystore_key. 
.PP
Definition at line 399 of file ccn_keystore.c.
.SS "struct ccn_pkey* ccn_keystore_public_key (struct ccn_keystore * p)\fC [read]\fP"
.PP
Definition at line 171 of file ccn_keystore.c.
.PP
Referenced by ccn_get_public_key(), ccn_sign_content(), and main().
.SS "const unsigned char* ccn_keystore_public_key_digest (struct ccn_keystore * p)"
.PP
Deprecated in favor of ccn_keystore_key_digest. 
.PP
Definition at line 416 of file ccn_keystore.c.
.SS "ssize_t ccn_keystore_public_key_digest_length (struct ccn_keystore * p)"
.PP
Deprecated in favor of ccn_keystore_digest_length. 
.PP
Definition at line 407 of file ccn_keystore.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Content-Centric Networking in C from the source code.
